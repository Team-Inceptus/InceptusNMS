{
  "_": "UNFINISHED",
  "class": {
    "type": "interface",
    "implements": [
      "com.mojang.brigadier.Message",
      "net.minecraft.network.chat.FormattedText",
      "java.lang.Iterable<{this}>"
    ],
    "comment": "Represents a serialized message that can be sent to players or written to the console."
  },
  "methods": {
    "stream": {
      "mods": ["default"],
      "return": {
        "type": "java.util.stream.Stream<{this}>",
        "comment": "The stream of the component and all of its children."
      },
      "comment": "Gets a stream of the component and all of its children."
    },
    "iterator": {
      "mods": ["default"],
      "return": {
        "type": "java.util.Iterator<{this}>",
        "comment": "An iterator over the component and all of its children."
      },
      "comment": "Gets an iterator over the component and all of its children."
    },
    "getStyle": {
      "return": {
        "type": "net.minecraft.network.chat.Style",
        "comment": "The style of this component. Returns a direct reference; changes to this style will modify the style of this component."
      },
      "comment": "Gets the style of this component. Returns a direct reference; changes to this style will modify the style of this component."
    },
    "getContents": {
      "return": {
        "type": "net.minecraft.network.chat.ComponentContents",
        "comment": "The contents of this component."
      },
      "comment": "Gets the contents of this component."
    },
    "getString": [
      {
        "return": {
          "type": "java.lang.String",
          "comment": "The plain text contained within this component."
        },
        "comment": "Gets the plain text contained within this component."
      },
      {
        "params": [
          {
            "type": "int",
            "name": "endIndex",
            "comment": "The index to stop at."
          }
        ],
        "return": {
          "type": "string",
          "comment": "The plain text contained within this component."
        },
        "comment": "Gets the plain text substring contained within this component with a specified stop index."
      }
    ],
    "getSiblings": {
      "return": {
        "type": "list<{this}>",
        "comment": "All Components in this Component."
      },
      "comment": "Gets the components that this Component contains."
    },
    "plainCopy": {
      "return": {
        "type": "net.minecraft.network.chat.MutableComponent",
        "comment": "A mutable copy of this component with all style removed."
      },
      "comment": "Creates a mutable copy of this component with all style removed."
    },
    "copy": {
      "return": {
        "type": "net.minecraft.network.chat.MutableComponent",
        "comment": "A mutable copy of this component."
      },
      "comment": "Creates a muable copy of this component."
    },
    "getVisualOrderText": {
      "return": {
        "type": "net.minecraft.util.FormattedCharSequence",
        "comment": "The plain text contained within this component, in the visual order."
      },
      "comment": "Gets the plain text contained within this component, in the visual order."
    },
    "toFlatList": [
      {
        "mods": ["default"],
        "return": {
          "type": "list<{this}>",
          "comment": "Returns this Component and all of its siblings as a flat list with no style."
        },
        "comment": "Gets this Component and its siblings as a flat list with no style."
      },
      {
        "mods": ["default"],
        "params": [
          {
            "type": "net.minecraft.network.chat.Style",
            "name": "chatmodifier",
            "comment": "The style to format the components applied."
          }
        ],
        "return": {
          "type": "list<{this}>",
          "comment": "Returns this Component and all of its siblings formatted according to the style."
        },
        "comment": "Gets this Component and its siblings as a flat list."
      }
    ],
    "visit": [
      {
        "mods": ["default"],
        "params": [
          {
            "type": "net.minecraft.network.chat.FormattedText.StyledContentConsumer<T>",
            "name": "format",
            "comment": "The format consumer to use."
          },
          {
            "type": "net.minecraft.network.chat.Style",
            "name": "style",
            "comment": "The style to format the components applied."
          }
        ],
        "generics": {
          "T": {
            "comment": "The type of the format consumer."
          }
        },
        "return": {
          "type": "java.util.Optional<T>",
          "comment": "An Optional containing the result of the visit."
        },
        "comment": "Visits this Component and its siblings with the given consumer to a specific format."
      },
      {
        "mods": ["default"],
        "params": [
          {
            "type": "net.minecraft.network.chat.FormattedText.ContentConsumer<T>",
            "name": "format",
            "comment": "The format consumer to use."
          }
        ],
        "generics": {
          "T": {
            "comment": "The type of the format consumer."
          }
        },
        "return": {
          "type": "java.util.Optional<T>",
          "comment": "An Optional containing the result of the visit."
        },
        "comment": "Visits this Component and its siblings with the given consumer."
      }
    ],
    "contains": {
      "mods": ["default"],
      "params": [
        {
        "type": "{this}",
        "name": "component",
        "comment": "The predicate to check."
        }
      ],
      "return": {
        "type": "boolean",
        "comment": "True if this Component contains the given Component."
      },
      "comment": "Checks if this Component contains the given Component."
    },
    "nullToEmpty": {
      "mods": ["static"],
      "params": [
        {
          "type": "string",
          "name": "text",
          "comment": "The text to use."
        }
      ],
      "return": {
        "type": "net.minecraft.network.chat.MutableComponent",
        "comment": "A MutableComponent representing the text."
      },
      "comment": "An alias of @({this}#literal(string)) that returns an empty Component if the input is null."
    },
    "literal": {
      "mods": ["static"],
      "params": [
        {
          "type": "string",
          "name": "text",
          "comment": "The text to use."
        }
      ],
      "return": {
        "type": "net.minecraft.network.chat.MutableComponent",
        "comment": "A MutableComponent representing the text."
      },
      "comment": "Creates a MutableComponent from the given text."
    }
  }
}